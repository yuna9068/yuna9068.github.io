{"meta":{"title":"程式大作戰","subtitle":null,"description":"程式學習筆記 及 【國立臺北科技大學 Java & Android 程式設計人才養成班】重點整理","author":"Yuna","url":"http://yuna9068.github.io"},"pages":[],"posts":[{"title":"MySQL 資料型態","slug":"MySQL-資料型態","date":"2017-08-22T14:38:05.000Z","updated":"2017-08-22T16:10:29.363Z","comments":true,"path":"2017/08/22/MySQL-資料型態/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQL-資料型態/","excerpt":"","text":"基本資料型態◆文數字資料(Character Types) 類型 儲存方式 儲存大小 範圍 CHAR(N) 固定SIZE，不足部分以空白填入通常在CHAR(1)時使用 字元數 0~255 VARCHER(N) 變動SIZE一般都使用VARCHAR 字元數+1byte 0~255 TINYBLOBBLOBMEDIUMBLOBLONGBLOB Binary不分大小寫 L+1bytesL+2bytesL+3bytesL+4bytes L &lt; 2^8L &lt; 2^16L &lt; 2^24L &lt; 2^32 TINYTEXTTEXTMEDIUMTEXTLONGTEXT Character分大小寫 L+1bytesL+2bytesL+3bytesL+4bytes L &lt; 2^8L &lt; 2^16L &lt; 2^24L &lt; 2^32 ◆數值資料(Numeric Types)整數(Integer) Type Bytes Minimum Value(Signed) Maximum Value(Signed) TINYINT 1 -128 127 SMALLINT 2 -32768 32767 MEDIUMINT 3 -8388608 8388607 INT/INTEGER 4 -2147483648 2147483647 BIGINT 8 -9223372036854775808 9223372036854775807 精準實數 - 商業應用DECIMAL(p,s) / NUMERIC(p,s)p為精確位數，總長度p = 整數 + 小數s(沒s代表是整數) 預設值為10範例：DECIMAL(5,2) 範圍 -999.99 ~ 999.99 逼近實數 - 科學計算FLOAT(p) / DOUBLE(p)p為指定精確長度，決定儲存的大小資料長度與有效範圍：單精確數 → 4bytes，p = 0 ~ 23；雙精確數 → 8bytes，p = 24 ~ 53 導出型資料型態◆日期/時間資料 型態 格式 範圍 儲存大小 DATETIME YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00 ~ 9999-12-31 23:59:59 8 bytes TIMESTAMP(跨國用) YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00 ~ 9999-12-31 23:59:59 4 bytes DATE YYYY-MM-DD 1000-01-01 ~ 9999-12-31 3 bytes YEAR YYYY 1901 ~ 2155 1 bytes TIME HH:MM:SS -838:59:59 ~ 838:59:59 3 bytes ※若要存西元1000年前的日期，要使用文數字資料型態※DATE、DATETIME、TIMESTAMP、YEAR → 紀錄時間點※TIME → 紀錄時間區段 DATETIME 可用一位數表示月，日，時，分，秒，例：1979-6-9 1:2:3 → 1979-06-09 01:02:03 若年為2位數時，00 ~ 69轉成2000 ~ 2069；70 ~ 69轉成1970 ~ 1999 DATE 轉 DATETIME、TIMESTAMP → 時間單位為00:00:00 DATETIME、TIMESTAMP 轉 DATE → 截斷時間單位 資料常值以字串型態輸入格式 - 或 : 符號可以改成其他任何符號，例： . / @ ^ + * 格式： ‘YYYY-MM-DD HH:MM:SS’ ‘YY-MM-DD HH:MM:SS’ ‘YYYY-MM-DD’ ‘YY-MM-DD’ YYYYMMDDHHMMSS YYMMDDHHMMSS YYYYMMDD YYMMDD TIME 資料常值以字串型態輸入格式 D：0~34days 所有無法自動轉換的字串，皆轉成00:00:00 格式： ‘D HH:MM:SS.fraction’ ‘D HH:MM:SS’ ‘D HH:MM’ ‘D HH’ ‘HH:MM:SS.fraction’ 或 ‘HHMMSS.fraction’ ‘HH:MM:SS’ 或 ‘HHMMSS’ ‘HH:MM’ 或 ‘HHMM’ ‘SS’ 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 比較運算子/邏輯運算子/SQL特定運算子","slug":"MySQL-比較運算子-邏輯運算子-SQL特定運算子","date":"2017-08-22T14:37:10.000Z","updated":"2017-08-22T15:02:35.227Z","comments":true,"path":"2017/08/22/MySQL-比較運算子-邏輯運算子-SQL特定運算子/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQL-比較運算子-邏輯運算子-SQL特定運算子/","excerpt":"","text":"運算式中的運算元資料形態要相同 運算子優先順序 算數運算子(、/ 優先於 +、-； 與/ (或 +與- )同時出現時，由左至右) 串連運算子 比較運算子 IS NULL, LIKE, IN BETWEEN NOT AND OR使用()改變運算順序，也可讓運算式意義更清楚 比較運算子比較運算子使用在兩個資料項的比較大小 = 等於 &gt;大於 &gt;=大於或等於 &lt;小於 &lt;=小於或等於 &lt;&gt;不等於 不能寫 100&lt;=X&lt;=200 ，要寫成 X&gt;=100 AND X&lt;=200 數值資料：值 字串資料：內碼(預設)英文→ASCII(第一碼0)；中文→BIG5(第一碼1) 中文&gt;英文小寫&gt;英文大寫&gt;阿拉伯數字 比第一個字即可，若第一個字相同則比下一個字 日期時間資料：世紀、年、月、日、時、分、秒 邏輯運算子若有一個以上的條件運算必須使用邏輯運算子結合成一個運算結果 AND OR NOT SQL特定運算子 BETWEEN：連續區間值的查詢，值由小→大，不可以大→小 可使用在數值、日期、字元 WHERE sal &gt;= 800 AND sal &lt;= 1000 → WHERE BETWEEN 800 AND 1000 IN：列舉值的查詢 可使用在數值、日期、字元 WHERE sal = 800 OR sal = 900 OR sal = 1000 → WHERE sal IN(800, 900, 1000) LIKE：萬用字元的查詢 %任意字元 _一個字元 WHERE name LIKE ‘A%’→A開頭 WHERE name LIKE ‘%A’→A結尾 WHERE name LIKE ‘%A%’→含有A WHERE name LIKE ‘__A%’→第三個字是A 若要搜尋3% → LIKE ESCAPE → 1WHERE content LIKE &apos;%3&amp;%%&apos; ESCAPE &apos;&amp;&apos;; ESCAPE ‘&amp;’跳脫符號，取消符號後方字元的特殊性，符號自訂，例：&amp;、\\、* ISNULL：空值(NULL)的查詢 WHERE sal IS NULL(不可以寫成sal=NULL) 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL NULL VALUE空值","slug":"MySQL-NULL-VALUE空值","date":"2017-08-22T14:36:01.000Z","updated":"2017-08-22T14:43:55.679Z","comments":true,"path":"2017/08/22/MySQL-NULL-VALUE空值/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQL-NULL-VALUE空值/","excerpt":"","text":"NULL值是在新增資料時沒有設定欄位值，資料庫管理系統便設定該欄位的內容為NULL 無法使用 無法指派 無法運算 與0和空白不相同 所有型態皆可以為空值 運算式中若含有NULL VALUE時，其結果為NULL IFNULL() 函數IFNULL(expr1, expr2)expr1不是NULL，則回傳expr1；expr1是NULL，則回傳expr2範例： 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL SELECT資料查詢","slug":"MySQL-SELECT資料查詢","date":"2017-08-22T02:14:48.000Z","updated":"2017-08-22T14:33:06.076Z","comments":true,"path":"2017/08/22/MySQL-SELECT資料查詢/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQL-SELECT資料查詢/","excerpt":"","text":"SELECT：查詢的資料項目 FROM：資料來源 WHERE：篩選原始紀錄 GROUP BY：資料分組 HAVING：篩選分組資料 ORDER BY：資料排序 LIMIT：傳回資料筆數，只有MySQL才有撰寫順序：SELECT→FROM→WHERE→GROUP BY→HAVING→ ORDER BY→LIMIT執行順序：FROM→WHERE→GROUP BY→HAVING→SELECT→ORDER BY→LIMIT 簡單查詢SELECT * FROM 資料表名稱選取資料表中的所有欄位資料，欄位大小寫依DESC命令所見為準1SELECT * FROM emp; SELECT 欄位 FROM 資料表名稱選取指定欄位資料，多項欄位以,區隔，欄位大(小)寫則結果顯示大(小)寫1SELECT EMPNO,ename FROM emp; 設定欄位別名→使用’ ‘1SELECT empno &apos;編號&apos;, ename &apos;NAME&apos; FROM emp; 字串連結→使用CONCAT(1, 2, 3, ⋯⋯)，以,分隔，若要加符號/字，要加上’ ‘1SELECT CONCAT(ename, &apos;,&apos;, job) FROM emp; →顯示 Amy,Salesman 排除重複資料列，使重複資料只出現一次→使用DISTINCT 欄位1SELECT DISTINCT job FROM emp; 設定查詢條件WHERE 條件子句/比較運算式/邏輯運算式/SQL特定運算式依查詢條件篩選符合條件的資料列 資料分組GROUP BY 資料項將表格中的紀錄依資料項的相同內容分為一個群組，並以資料項為排序(ASC)的依據 HAVING設定條件來篩選回傳的分組資料 資料排序ORDER BY 欄位/別名/運算式/位置 ASC(升冪，預設，可不打)/DESC(降冪)依指定欄位或運算式的資料值來排序，可以使用多個資料項排序位置→依資料項在list中的位置順序，若超出欄位總數會出現ERROR範例： LIMIT offset, count設定查詢結果傳回的資料筆數，若只有一個整數→countoffset：傳回資料的開始位置，由0起算，&gt;=0；可以把它想成要略過筆數count：傳回最大的資料筆數範例： 從位置3開始傳回5筆資料→ CASE運算式列舉式CASE(Simple CASE)與一串列舉的值做比較，傳回第一個值相等的回傳值若都不相等則傳回ELSE的回傳值，若無給定ELSE則傳回NULL1234567SELECT 顯示的欄位, CASE 欄位 WHEN v1 THEN r1 ⋯⋯ ELSE r END 新欄位名稱FROM 資料表 範例： 條件式CASE(Searched CASE)與一串列舉的條件做比較，傳回第一個條件運算結果=TRUE的回傳值若都不相等則傳回ELSE的回傳值，若無給定ELSE則傳回NULL1234567SELECT 顯示的欄位, CASE WHEN 條件 THEN r1 ⋯⋯ ELSE r END 新欄位名稱FROM 資料表 範例： 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 命令","slug":"MySQL-命令","date":"2017-08-18T14:34:03.000Z","updated":"2017-08-22T16:13:48.690Z","comments":true,"path":"2017/08/18/MySQL-命令/","link":"","permalink":"http://yuna9068.github.io/2017/08/18/MySQL-命令/","excerpt":"","text":"SHOW DATABASES查詢目前伺服器現存的所有資料庫1SHOW DATABASES; CREATE DATABASE 資料庫名稱建立一個新的資料庫1CREATE DATABASE mydb; USE 資料庫名稱指定預設存取的資料庫1USE mydb; SOURCE 路徑\\檔案名稱執行一個SQL命令檔，路徑不要有中文1SOURCE D:\\mysql_demobld.sql SHOW TABLES列出預設資料庫中所有資料表1SHOW TABLES; DESCRIBE 資料庫名稱 / DESC 資料庫名稱列出指定資料表的欄位資訊1DESC dept; TEE 路徑\\檔案名稱留存執行結果，存成文字檔，結束留存時輸入NOTEE1TEE D:\\hw01 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"About MySQL","slug":"About-MySQL","date":"2017-08-18T11:47:21.000Z","updated":"2017-08-18T15:40:39.520Z","comments":true,"path":"2017/08/18/About-MySQL/","link":"","permalink":"http://yuna9068.github.io/2017/08/18/About-MySQL/","excerpt":"","text":"MySQL是關聯式資料庫管理系統(RDBMS) 特色 開放原始碼(Community Server) 速度快、可靠、易於使用、成本低 主從式架構 網路上有許多相關軟體 多語言支援 規模小，功能有限，適用於個人使用者及中小型企業 開放資源→舊版可用的指令不一定能在新版上運作 支援多執行緒，充分利用CPU資源，支援多用戶 撰寫SQL命令 指令不分大小寫 敘述可寫成多行，習慣上每個子句以一行表示，但Keywords不可分割成多行 以分號；作為敘述的結束符號並執行該敘述 SQL語言的分類資料查詢SELECT：查詢資料庫中表格的資料 資料操作語言(DML：Data Manipulation Language)INSERT：可新增資料庫表格內的資料UPDATE：可更新資料庫表格內的資料DELETE：可刪除資料庫表格內的資料 資料定義語言(DDL：Data Definition Language)CREATE：可建立資料庫中的物件ALTER：可變更資料庫中物件的結構DROP：可刪除資料庫中的物件RENAME：可變更資料庫中的物件名稱TRUNCATE：清除資料庫中表格內的資料 資料控制語言(DCL：Data Control Language)GRANT：授予權限REVOKE：除移權限 資料來源：李志賢老師上課講義、Wikipedia_MySQL","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]}]}