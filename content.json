{"meta":{"title":"程式大作戰","subtitle":null,"description":"程式學習筆記 及 【國立臺北科技大學 Java & Android 程式設計人才養成班】重點整理","author":"Yuna","url":"http://yuna9068.github.io"},"pages":[],"posts":[{"title":"MySQL 函數 5.通用函數","slug":"MySQLGeneralFunctions","date":"2017-08-24T10:01:31.000Z","updated":"2017-08-26T10:35:00.454Z","comments":true,"path":"2017/08/24/MySQLGeneralFunctions/","link":"","permalink":"http://yuna9068.github.io/2017/08/24/MySQLGeneralFunctions/","excerpt":"","text":"系統資訊函數(Information Functions) 函數 功能 BENCHMARK() CHARSET(str) 字串所屬的字元集 COERCIBILITY() COLLATION() CONNECTION_ID() 連線的CONNECTION ID CURRENT_USER(), CURRENT_USER DATABASE() 連線的資料庫 FOUND_ROWS() LAST_INSERT_ID() ROW_COUNT() SCHEMA() SESSION_USER() SYSTEM_USER() USER() 連線的使用者 VERSION() 資料庫版本 流程控制函數(Control Flow Functions) 函數 功能 IFNULL(expr1, expr2) expr1不是NULL，回傳expr1；expr1是NULL，回傳expr2；返回數值或字串 IF(expr1, expr2, expr3) expr1是true，回傳expr2；expr1是false，回傳expr3 NULLIF(expr1, expr2) expr1 = expr2，回傳NULL；expr1 ≠ expr2，回傳expr1；返回數值或字串 1234SELECT IFNULL(1, 0), IFNULL(NULL, 10), IFNULL(1/0, 10), IFNULL(1/0, &apos;yes&apos;); 1234567SELECT IF(1&gt;2, 2, 3) IF1, IF(1&lt;2, &apos;yes&apos;, &apos;no&apos;) IF2, IF(STRCMP(1, 1), &apos;yes&apos;, &apos;no&apos;) IF3, IF(STRCMP(2, 1), &apos;yes&apos;, &apos;no&apos;) IF4, IF(STRCMP(&apos;test&apos;, &apos;test1&apos;), &apos;yes&apos;, &apos;no&apos;) IF5, IF(NULL&gt;0, &apos;true&apos;, &apos;false&apos;) IF6, IF(NULL=NULL, &apos;true&apos;, &apos;false&apos;) IF7; 123456SELECT NULLIF(1,1), NULLIF(1,0), NULLIF(0,1), NULLIF(NULL,NULL), NULLIF(NULL,0), NULLIF(0,0.0); 資料來源：李志賢老師上課講義、MySQL 5.7 Reference Manual / Functions and Operators / Information Functions、MySQL 5.7 Reference Manual / Functions and Operators / Control Flow Functions","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 函數 4.資料型態轉換函數","slug":"MySQLConversionFunctions","date":"2017-08-24T10:01:12.000Z","updated":"2017-08-26T09:58:01.391Z","comments":true,"path":"2017/08/24/MySQLConversionFunctions/","link":"","permalink":"http://yuna9068.github.io/2017/08/24/MySQLConversionFunctions/","excerpt":"","text":"* CONVERT(expr, type) 其他DB也是用CONVERT* CAST(expr AS type)type BINARY[(N)] CHAR[(N)] DATE DATETIME DECIMAL[(M[,D])] JSON (added in MySQL 5.7.8) NCHAR[(N)] SIGNED [INTEGER] TIME UNSIGNED [INTEGER] 資料來源：李志賢老師上課講義、MySQL 5.7 Reference Manual / Functions and Operators / Cast Functions and Operators","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 函數 3.日期/時間函數","slug":"MySQLDateAndTimeFunctions","date":"2017-08-24T10:00:37.000Z","updated":"2017-08-26T09:28:40.536Z","comments":true,"path":"2017/08/24/MySQLDateAndTimeFunctions/","link":"","permalink":"http://yuna9068.github.io/2017/08/24/MySQLDateAndTimeFunctions/","excerpt":"","text":"函數 功能 ADDDATE(date, INTERVAL expr type) 日期加法 ADDTIME(expr1, expr2) 時間加法 CONVERT_TZ() CURDATE() 現在日期(抓取系統時間) CURRENT_DATE(), CURRENT_DATE CURRENT_TIME(), CURRENT_TIME CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP 現在日期與時間(抓取系統時間) CURTIME() 現在時間(抓取系統時間) DATE() DATE_ADD() DATE_FORMAT(date, format) 將日期格式化成字串format格式 DATE_SUB() DATEDIFF(expr1, expr2) 兩個日期相減(expr1 - expr2) DAY(date) 傳回指定日期的日 DAYNAME(date) 日期名稱(星期幾) DAYOFMONTH(date) 月份中的第幾天 DAYOFWEEK(date) 一週中的第幾天日：1，一：2，……，六：7 DAYOFYEAR(date) 一年中的第幾天 EXTRACT(type FROM date) 傳回指定的日期單位 FROM_DAYS() FROM_UNIXTIME() GET_FORMAT() HOUR(time) 傳回指定日期的時 LAST_DAY LOCALTIME(), LOCALTIME LOCALTIMESTAMP, LOCALTIMESTAMP() MAKEDATE() MAKETIME() MICROSECOND(expr) 傳回指定日期的微秒(資料庫不存微秒) MINUTE(time) 傳回指定日期的分 MONTH(date) 傳回指定日期的月份 MONTHNAME(date) 月份名稱 NOW() 現在日期與時間(抓取系統時間) PERIOD_ADD() PERIOD_DIFF(P1, P2) 月份(年月-年月)，算出來沒那麼精準 QUARTER() SEC_TO_TIME() SECOND(time) 傳回指定日期的秒 STR_TO_DATE() SUBDATE(date, INTERVAL expr type) 日期減法 SUBTIME(expr1, expr2) 時間減法 SYSDATE() TIME(expr) 傳回時間單位 TIME_FORMAT() TIME_TO_SEC() TIMEDIFF(expr1, expr2) 時間減法 TIMESTAMP(expr1, expr2) 時間加法 TIMESTAMPADD(interval, int_expr, datetime_expr) 時間加法interval：MICROSECOND (microseconds), SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or YEAR TIMESTAMPDIFF(interval, datetime_expr1, datetime_expr2) 時間加法interval：MICROSECOND (microseconds), SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or YEAR TO_DAYS() TO_SECONDS() UNIX_TIMESTAMP() UTC_DATE() 格林威治日期(抓取系統時間) UTC_TIME() 格林威治時間(抓取系統時間) UTC_TIMESTAMP() 格林威治日期與時間(抓取系統時間) WEEK(date[, mode]) 傳回週數0~52 WEEKDAY(date) 傳回星期索引一：0，二：1，……，日：6 WEEKOFYEAR(date) 一年中的第幾周 YEAR(date) 傳回指定日期的年份 YEARWEEK(date[, start]) 傳回指定日期的年份及週數例：YEARWEEK(‘1987-01-01’) → 198652 DATE_FORMAT(date, format) format格式 符號 功能 %a 星期幾(英文縮寫) (Sun..Sat) %b 月份(英文縮寫) (Jan..Dec) %c 月份(數字) (0..12) %D 日期(英語後綴) (0th, 1st, 2nd, 3rd, …) %d 日期(兩位數) (00..31) %e 日期(數字) (0..31) %f 微秒 (000000..999999) %H 小時(24小時制，兩位數) (00..23) %h 小時(12小時制，兩位數) (01..12) %I 小時(12小時制，兩位數) (01..12) %i 分鐘(兩位數) (00..59) %j 一年中的第幾天(三位數) (001..366) %k 小時(24小時制) (0..23) %l 小時(12小時制) (1..12) %M 月份(英文) (January..December) %m 月份(數字，兩位數) (00..12) %p AM or PM %r 時間(12小時制，加AM或PM) (hh:mm:ss followed by AM or PM) %S 秒(兩位數) (00..59) %s 秒(兩位數) (00..59) %T 時間(24小時制) (hh:mm:ss) %U 週數 (00..53), 每周第一天：週日; WEEK() mode 0 %u 週數 (00..53), 每周第一天：週一; WEEK() mode 1 %V 週數 (01..53), 每周第一天：週日; WEEK() mode 2; used with %X %v 週數 (01..53), 每周第一天：週一; WEEK() mode 3; used with %x %W 星期幾(英文) (Sunday..Saturday) %w 一週中的第幾天 (0=Sunday..6=Saturday) %X 週數的年份(四位數), 每周第一天：週日; used with %V %x 週數的年份(四位數), 每周第一天：週一; used with %v %Y 年份(四位數) %y 年份(兩位數) %% A literal % character %x x, for any “x” not listed above 資料來源：李志賢老師上課講義、MySQL 5.7 Reference Manual / Functions and Operators / Date and Time Functions","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 函數 2.數值函數","slug":"MySQLNumericFunctions","date":"2017-08-24T09:59:52.000Z","updated":"2017-08-25T10:02:38.675Z","comments":true,"path":"2017/08/24/MySQLNumericFunctions/","link":"","permalink":"http://yuna9068.github.io/2017/08/24/MySQLNumericFunctions/","excerpt":"","text":"函數 功能 ABS(X) 絕對值 ACOS() ASIN() ATAN() ATAN2(), ATAN() CEIL(X) 傳回不小於X的最小整數值例：CEIL(2.35) → 3例：CEIL(-2.35) → -2 CEILING() CONV() COS() COT() CRC32() DEGREES(X) 徑值轉度數 DIV / EXP() FLOOR(X) 傳回不大於X的最大整數值 LN() LOG() LOG10() LOG2() - MOD(N, M) 求餘數 %, MOD PI() 圓周率 + POW() POWER(X, Y) X的Y次方例：POWER(2, 10) → 2的10次方 RADIANS(X) 度數轉徑值 RAND(N) 亂數(0~N)，N未填則為1 ROUND(X, D) 四捨五入，D未填則為0例：ROUND(1234.5678, 2) → 1234.57例：ROUND(1234.5678) → 1235例：ROUND(1234.5678, -2) → 1200例：ROUND(1234.5678, -4) → 0 SIGN(X) 正負數 SIN() SQRT(X) 平方根 TAN() * TRUNCATE(X, D) 無條件捨去，D一定要填例：TRUNCATE(1234.5678, 2) → 1234.56例：TRUNCATE(1234.5678) → ERROR例：TRUNCATE(1234.5678, -2) → 1200例：TRUNCATE(1234.5678, -4) → 0 - 資料來源：李志賢老師上課講義、MySQL 5.7 Reference Manual / Functions and Operators / Numeric Functions and Operators","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 函數 1.字串函數","slug":"MySQLStringFunctions","date":"2017-08-24T09:59:29.000Z","updated":"2017-08-25T09:18:51.571Z","comments":true,"path":"2017/08/24/MySQLStringFunctions/","link":"","permalink":"http://yuna9068.github.io/2017/08/24/MySQLStringFunctions/","excerpt":"","text":"函數 功能 ASCII(char) 將第一個字元轉成int BIN() BIT_LENGTH() CHAR() CHAR_LENGTH(str) 字元個數例：CHAR_LENGTH(‘程式AB12’) → 6 CHARACTER_LENGTH() CONCAT(str1, str2, …) 字串連結 CONCAT_WS() ELT() EXPORT_SET() FIELD(str, str1, str2, …) 傳回str在str list的位置，類似INSELECT deptno FROM emp WHERE FIELD(deptno,10,20); → 列出deptno值=10或20的資料SELECT deptno FROM emp ORDER BY FIELD(deptno,20,10); → 依deptno排序，先20再10，非20或10的資料排在最上方 FIND_IN_SET() FORMAT() FROM_BASE64() HEX() INSERT(str, pos, len, newstr) 在指定區間插入一字串例：INSERT(‘This is a test’, 4, 5, ‘at’) → Thiata test INSTR(str, substr) 傳回指定字元在字串中出現的位置 LCASE(str) 將字串轉成小寫字母在MySQL用的機會少，因指令不分大小寫 LEFT(str, len) 由左至右傳回指定字元數 LENGTH(str) 字串長度(byte)例：LENGTH(‘程式AB12’) → 10 LIKE LOAD_FILE() LOCATE(substr, str[, pos]) 傳回指定字元在字串中出現的位置 LOWER(str) 將字串轉成小寫字母在MySQL用的機會少，因指令不分大小寫 LPAD(str, len, padstr) 將字串不足指定長度(len)以指定字元(padstr)向左補齊 LTRIM(str) 去除字串左邊空白字元 MAKE_SET() MATCH MID() NOT LIKE NOT REGEXP OCT() OCTET_LENGTH() ORD() POSITION() QUOTE() REGEXP REPEAT(str, count) 將指定字串重複指定次數 REPLACE(str, from_str, to_str) 將新字串替代舊字串 REVERSE(str) 將字串反轉 RIGHT(str, len) 由右至左傳回指定字元數 RLIKE RPAD(str, len, padstr) 將字串不足指定長度(len)以指定字元(padstr)向右補齊 RTRIM(str) 去除字串右邊空白字元 SOUNDEX() SOUNDS LIKE SPACE(N) 將空白字元重複指定次數 STRCMP(expr1, expr2) 兩字串比較expr1 = expr2 return 0expr1 &gt; expr2 return 1expr1 &lt; expr2 return -1 SUBSTR() SUBSTRING(str, pos)SUBSTRING(str FROM pos) 擷取字串部分字元，從pos開始到最後一個 SUBSTRING(str, pos, len)SUBSTRING(str FROM pos FOR len) 擷取字串部分字元，從pos開始擷取len個 SUBSTRING_INDEX() TO_BASE64() TRIM([{BOTH / LEADING / TRAILING} [remstr] FROM] str) 去除字串 前後(BOTH)的remstr / 左邊(LEADING)的remstr / 右邊(TRAILING)的remstr預設是BOTH，remstr沒寫的話是去除兩端空白字元 UCASE(str) 將字串轉成大寫字母在MySQL用的機會少，因指令不分大小寫 UNHEX() UPPER(str) 將字串轉成大寫字母在MySQL用的機會少，因指令不分大小寫 WEIGHT_STRING() 資料來源：李志賢老師上課講義、MySQL 5.7 Reference Manual / Functions and Operators / String Functions","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 函數","slug":"MySQLFunctions","date":"2017-08-24T08:57:33.000Z","updated":"2017-08-25T07:24:03.850Z","comments":true,"path":"2017/08/24/MySQLFunctions/","link":"","permalink":"http://yuna9068.github.io/2017/08/24/MySQLFunctions/","excerpt":"","text":"SQL函數(SQL Functions)是強化SQL命令功能的副程式 執行計算 修改個別資料項 格式化輸出結果 資料型態轉換(運算式中的運算元資料形態要相同) 群組資料的匯總 SQL函數的類別單一資料列函數 一般用來做單一資料項的運算 接受一個或多個參數，參數種類：欄位名稱、運算式、常值、變數值、函數 n筆紀錄(row)執行n次，回傳n個結果 字串函數 處理字串資料：接受字串資料當參數，執行後傳回字串或數值 數值函數 處理數值資料：接受數值資料當參數，執行後傳回數值 日期/時間函數 處理日期/時間資料 資料型態轉換函數 做資料型態轉換 通用函數 流程控制與獲取系統資訊 多重資料列函數 資料彙總 多筆紀錄(rows)執行一次，回傳一個結果 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 資料型態","slug":"MySQLDataTypes","date":"2017-08-22T14:38:05.000Z","updated":"2017-08-24T08:48:15.805Z","comments":true,"path":"2017/08/22/MySQLDataTypes/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQLDataTypes/","excerpt":"","text":"基本資料型態◆文數字資料(Character Types) 類型 儲存方式 儲存大小 範圍 CHAR(N) 固定SIZE，不足部分以空白填入通常在CHAR(1)時使用 字元數 0~255 VARCHER(N) 變動SIZE一般都使用VARCHAR 字元數+1byte 0~255 TINYBLOBBLOBMEDIUMBLOBLONGBLOB Binary不分大小寫 L+1bytesL+2bytesL+3bytesL+4bytes L &lt; 2^8L &lt; 2^16L &lt; 2^24L &lt; 2^32 TINYTEXTTEXTMEDIUMTEXTLONGTEXT Character分大小寫 L+1bytesL+2bytesL+3bytesL+4bytes L &lt; 2^8L &lt; 2^16L &lt; 2^24L &lt; 2^32 ◆數值資料(Numeric Types)整數(Integer) Type Bytes Minimum Value(Signed) Maximum Value(Signed) TINYINT 1 -128 127 SMALLINT 2 -32768 32767 MEDIUMINT 3 -8388608 8388607 INT/INTEGER 4 -2147483648 2147483647 BIGINT 8 -9223372036854775808 9223372036854775807 精準實數 - 商業應用DECIMAL(p,s) / NUMERIC(p,s)p為精確位數，總長度p = 整數 + 小數s(沒s代表是整數) 預設值為10範例：DECIMAL(5,2) 範圍 -999.99 ~ 999.99 逼近實數 - 科學計算FLOAT(p) / DOUBLE(p)p為指定精確長度，決定儲存的大小資料長度與有效範圍：單精確數 → 4bytes，p = 0 ~ 23；雙精確數 → 8bytes，p = 24 ~ 53 導出型資料型態◆日期/時間資料 型態 格式 範圍 儲存大小 DATETIME YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00 ~ 9999-12-31 23:59:59 8 bytes TIMESTAMP(跨國用) YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00 ~ 9999-12-31 23:59:59 4 bytes DATE YYYY-MM-DD 1000-01-01 ~ 9999-12-31 3 bytes YEAR YYYY 1901 ~ 2155 1 bytes TIME HH:MM:SS -838:59:59 ~ 838:59:59 3 bytes ※若要存西元1000年前的日期，要使用文數字資料型態※DATE、DATETIME、TIMESTAMP、YEAR → 紀錄時間點※TIME → 紀錄時間區段 DATETIME 可用一位數表示月，日，時，分，秒，例：1979-6-9 1:2:3 → 1979-06-09 01:02:03 若年為2位數時，00 ~ 69轉成2000 ~ 2069；70 ~ 69轉成1970 ~ 1999 DATE 轉 DATETIME、TIMESTAMP → 時間單位為00:00:00 DATETIME、TIMESTAMP 轉 DATE → 截斷時間單位 資料常值以字串型態輸入格式 - 或 : 符號可以改成其他任何符號，例： . / @ ^ + * 格式： ‘YYYY-MM-DD HH:MM:SS’ ‘YY-MM-DD HH:MM:SS’ ‘YYYY-MM-DD’ ‘YY-MM-DD’ YYYYMMDDHHMMSS YYMMDDHHMMSS YYYYMMDD YYMMDD TIME 資料常值以字串型態輸入格式 D：0~34days (1D = 24hours) 所有無法自動轉換的字串，皆轉成00:00:00 格式： ‘D HH:MM:SS.fraction’ ‘D HH:MM:SS’ ‘D HH:MM’ ‘D HH’ ‘HH:MM:SS.fraction’ 或 ‘HHMMSS.fraction’ ‘HH:MM:SS’ 或 ‘HHMMSS’ ‘HH:MM’ 或 ‘HHMM’ ‘SS’ 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 比較運算子/邏輯運算子/SQL特定運算子","slug":"MySQLOperators","date":"2017-08-22T14:37:10.000Z","updated":"2017-08-24T08:27:40.562Z","comments":true,"path":"2017/08/22/MySQLOperators/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQLOperators/","excerpt":"","text":"運算式中的運算元資料形態要相同 運算子優先順序 算數運算子(*、/ 優先於 +、-； *與/ (或 +與- )同時出現時，由左至右) 串連運算子 比較運算子 IS NULL, LIKE, IN BETWEEN NOT AND OR使用()改變運算順序，也可讓運算式意義更清楚 比較運算子比較運算子使用在兩個資料項的比較大小 = 等於 &gt;大於 &gt;=大於或等於 &lt;小於 &lt;=小於或等於 &lt;&gt;不等於 不能寫 100&lt;=X&lt;=200 ，要寫成 X&gt;=100 AND X&lt;=200 數值資料：值 字串資料：內碼(預設)英文→ASCII(第一碼0)；中文→BIG5(第一碼1) 中文&gt;英文小寫&gt;英文大寫&gt;阿拉伯數字 比第一個字即可，若第一個字相同則比下一個字 日期時間資料：世紀、年、月、日、時、分、秒 邏輯運算子若有一個以上的條件運算必須使用邏輯運算子結合成一個運算結果 AND OR NOT SQL特定運算子 BETWEEN：連續區間值的查詢，值由小→大，不可以大→小 可使用在數值、日期、字元 123WHERE sal &gt;= 800 AND sal &lt;= 1000等同 → WHERE sal BETWEEN 800 AND 1000相反 → WHERE sal NOT BETWEEN 800 AND 1000 IN：列舉值的查詢 可使用在數值、日期、字元 123WHERE sal = 800 OR sal = 900 OR sal = 1000等同 → WHERE sal IN(800, 900, 1000)相反 → WHERE sal NOT IN(800, 900, 1000) LIKE：萬用字元的查詢 % 任意字元 _ 一個字元 ESCAPE ‘&amp;’ 跳脫符號，取消符號後方字元的特殊性，符號自訂，例：&amp; \\ * 123456A開頭 → WHERE name LIKE &apos;A%&apos;相反(不是A開頭) → WHERE name NOT LIKE &apos;A%&apos;A結尾 → WHERE name LIKE &apos;%A&apos;含有A → WHERE name LIKE &apos;%A%&apos;第三個字是A → WHERE name LIKE &apos;__A%&apos;搜尋3% → WHERE content LIKE &apos;%3&amp;%%&apos; ESCAPE &apos;&amp;&apos; ISNULL：空值(NULL)的查詢 123WHERE sal IS NULL不可以寫成sal=NULL相反 → WHERE sal IS NOT NULL 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL NULL VALUE空值","slug":"MySQLNullValue","date":"2017-08-22T14:36:01.000Z","updated":"2017-08-24T08:22:03.470Z","comments":true,"path":"2017/08/22/MySQLNullValue/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQLNullValue/","excerpt":"","text":"NULL值是在新增資料時沒有設定欄位值，資料庫管理系統便設定該欄位的內容為NULL 無法使用 無法指派 無法運算 與0和空白不相同 所有型態皆可以為空值 運算式中若含有NULL VALUE時，其結果為NULL 數值除以零，例：1/0 任何資料跟NULL比較都是NULL IFNULL() 函數IFNULL(expr1, expr2)expr1不是NULL，則回傳expr1；expr1是NULL，則回傳expr2；返回數值或字串範例： 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL SELECT資料查詢","slug":"MySQLSelect","date":"2017-08-22T02:14:48.000Z","updated":"2017-08-24T08:39:18.859Z","comments":true,"path":"2017/08/22/MySQLSelect/","link":"","permalink":"http://yuna9068.github.io/2017/08/22/MySQLSelect/","excerpt":"","text":"SELECT：查詢的資料項目 FROM：資料來源 WHERE：篩選原始紀錄 GROUP BY：資料分組 HAVING：篩選分組資料 ORDER BY：資料排序 LIMIT：傳回資料筆數，只有MySQL才有撰寫順序：SELECT→FROM→WHERE→GROUP BY→HAVING→ ORDER BY→LIMIT執行順序：FROM→WHERE→GROUP BY→HAVING→SELECT→ORDER BY→LIMIT 簡單查詢SELECT * FROM 資料表名稱選取資料表中的所有欄位資料，欄位大小寫依DESC命令所見為準1SELECT * FROM emp; SELECT 欄位 FROM 資料表名稱選取指定欄位資料，多項欄位以,區隔，欄位大(小)寫則結果顯示大(小)寫1SELECT EMPNO,ename FROM emp; 設定欄位別名→使用’ ‘1SELECT empno &apos;編號&apos;, ename &apos;NAME&apos; FROM emp; 字串連結→使用CONCAT(1, 2, 3, ⋯⋯)，以,分隔，若要加符號或字串，要加上’ ‘1SELECT DEPTNO, DNAME, LOC, CONCAT(DEPTNO, &apos; - &apos;, DNAME, &apos;, Loc: &apos;, LOC) Department FROM DEPT; 範例： 排除重複資料列，使重複資料只出現一次→使用DISTINCT 欄位1SELECT DISTINCT job FROM emp; 範例： 設定查詢條件WHERE 條件子句/比較運算式/邏輯運算式/SQL特定運算式依查詢條件篩選符合條件的資料列 資料分組GROUP BY 資料項將表格中的紀錄依資料項的相同內容分為一個群組，並以資料項為排序(ASC)的依據 HAVING設定條件來篩選回傳的分組資料 資料排序ORDER BY 欄位/別名/運算式/位置 ASC(升冪，預設，可不打)/DESC(降冪) 依指定欄位或運算式的資料值來排序，可以使用多個資料項排序 若有空值時，ASC升冪在最前面，DESC降冪在最下面 位置→依資料項在list中的位置順序(起始數值：1)，若超出欄位總數會出現ERROR範例： LIMIT offset, count設定查詢結果傳回的資料筆數，若只有一個整數→countoffset：傳回資料的開始位置，由0起算，&gt;=0；可以把它想成要略過筆數count：傳回最大的資料筆數範例：從位置3開始傳回5筆資料 CASE運算式列舉式CASE(Simple CASE)與一串列舉的值做比較，傳回第一個值相等的回傳值若都不相等則傳回ELSE的回傳值，若無給定ELSE則傳回NULL1234567SELECT 顯示的欄位, CASE 欄位 WHEN v1 THEN r1 ⋯⋯ ELSE r END 新欄位名稱FROM 資料表 範例： 條件式CASE(Searched CASE)與一串列舉的條件做比較，傳回第一個條件運算結果=TRUE的回傳值若都不相等則傳回ELSE的回傳值，若無給定ELSE則傳回NULL1234567SELECT 顯示的欄位, CASE WHEN 條件 THEN r1 ⋯⋯ ELSE r END 新欄位名稱FROM 資料表 範例： 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"MySQL 命令","slug":"MySQLStatements","date":"2017-08-18T14:34:03.000Z","updated":"2017-08-22T16:13:48.690Z","comments":true,"path":"2017/08/18/MySQLStatements/","link":"","permalink":"http://yuna9068.github.io/2017/08/18/MySQLStatements/","excerpt":"","text":"SHOW DATABASES查詢目前伺服器現存的所有資料庫1SHOW DATABASES; CREATE DATABASE 資料庫名稱建立一個新的資料庫1CREATE DATABASE mydb; USE 資料庫名稱指定預設存取的資料庫1USE mydb; SOURCE 路徑\\檔案名稱執行一個SQL命令檔，路徑不要有中文1SOURCE D:\\mysql_demobld.sql SHOW TABLES列出預設資料庫中所有資料表1SHOW TABLES; DESCRIBE 資料庫名稱 / DESC 資料庫名稱列出指定資料表的欄位資訊1DESC dept; TEE 路徑\\檔案名稱留存執行結果，存成文字檔，結束留存時輸入NOTEE1TEE D:\\hw01 資料來源：李志賢老師上課講義","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]},{"title":"About MySQL","slug":"aboutMySQL","date":"2017-08-18T11:47:21.000Z","updated":"2017-08-18T15:40:39.520Z","comments":true,"path":"2017/08/18/aboutMySQL/","link":"","permalink":"http://yuna9068.github.io/2017/08/18/aboutMySQL/","excerpt":"","text":"MySQL是關聯式資料庫管理系統(RDBMS) 特色 開放原始碼(Community Server) 速度快、可靠、易於使用、成本低 主從式架構 網路上有許多相關軟體 多語言支援 規模小，功能有限，適用於個人使用者及中小型企業 開放資源→舊版可用的指令不一定能在新版上運作 支援多執行緒，充分利用CPU資源，支援多用戶 撰寫SQL命令 指令不分大小寫 敘述可寫成多行，習慣上每個子句以一行表示，但Keywords不可分割成多行 以分號；作為敘述的結束符號並執行該敘述 SQL語言的分類資料查詢SELECT：查詢資料庫中表格的資料 資料操作語言(DML：Data Manipulation Language)INSERT：可新增資料庫表格內的資料UPDATE：可更新資料庫表格內的資料DELETE：可刪除資料庫表格內的資料 資料定義語言(DDL：Data Definition Language)CREATE：可建立資料庫中的物件ALTER：可變更資料庫中物件的結構DROP：可刪除資料庫中的物件RENAME：可變更資料庫中的物件名稱TRUNCATE：清除資料庫中表格內的資料 資料控制語言(DCL：Data Control Language)GRANT：授予權限REVOKE：除移權限 資料來源：李志賢老師上課講義、Wikipedia_MySQL","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://yuna9068.github.io/tags/MySQL/"},{"name":"臺北科大Java","slug":"臺北科大Java","permalink":"http://yuna9068.github.io/tags/臺北科大Java/"}]}]}